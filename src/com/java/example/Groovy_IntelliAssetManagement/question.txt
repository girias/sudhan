Intelli’s Asset Management System

Intelli Machine Solutions Company is finding it difficult to manage the hardware and software assets of their company. All the records are managed manually, which makes it even more harder to search through registers and look for an asset or an employee assigned to the assets. So help the company in building a menu driven Asset Management System for operating, maintaining, upgrading, and disposing assets cost-effectively.


The Asset Management System should do the basic operations listed below.,
1) Assign - Assign an asset to an employee
2) Return - Update an asset when returned by the employee
3) Exit

For 'Assign' Operation:

1) Read a username from the User and validate if he/she is a registered user.
2) Username is case sensitive.
3) If the User gives an invalid username, display a message as “Invalid username” and loop the process until a valid username is given.
4) If the User gives a valid username, the system should read the asset type from the user. Display a message “Invalid asset type” if the asset type doesn’t exist and loop the process until the User gives a valid asset type.
5) Once the User gives a valid asset type, the first available asset (ordered by asset Id) is assigned to the user. If no assets are available of the given asset type, display the message “Asset type is not available”

For 'Return' Operation:

1) Read a username and validate if he/she is a registered user.
2) If the User gives an invalid username, display a message as “Invalid username” and loop the process until a valid username is given.
3) If the User gives a valid username,  then print all the asset id which is assigned to that user and then  the system should read the asset Id from the user. Display a message “Invalid asset Id” if the asset Id is invalid and loop the process until the User gives a valid asset Id.
4) When a valid asset Id is given, the status of the asset is changed to Available status.

For 'Exit' Operation terminate the system.

Problem Specifications:
Create a class named as User, which contains the following member variables.
Data Type	Attribute Name	Description
Long	id	user id
String	username	username of the user
String	department	department of the user
Include appropriate Constructor, getter and setter.

Create a class named as Asset, which contains the following member variables.
Data Type	Attribute Name	Description
Long	id	Asset id
String	category	Assets category
String	type	Assets type
Double	price	Price of an asset
User	user	User assigned to an asset
Boolean	availability	Asset availability.
Include appropriate Constructor, getter and setter.

Create a class named as AssetManagementSystem, which contains the following methods.
No	Class Name	Method Name	Input Parameter	Output Parameter
1	AssetManagementSystem	readFileContent(filename) - This method is used to read the content from file and return that file's content as string.	String filename	String


2	AssetManagementSystem	generateUserList(xmlString) - This method is used to read the xmlString(xml file's content) and generate the user list from that xmlString. The method returns the user list.	String xmlString	List<User>
3	AssetManagementSystem	generateAssetList(xmlString) - This method is used to read the xmlString(xml file content) and generate the asset list from that xmlString. The method returns the asset list.	String xmlString	List<Asset>
4	AssetManagementSystem	obtainUser(username) - This method is used to find the user using the username and returns the user object.	String username	User
5	AssetManagementSystem	isValidAssetType(assetType) - This method is used to find weather the asset type is valid (which is present in xml file) or not. If it is valid then the method returns the asset object. Otherwise returns null. 	String assetType	Asset
6	AssetManagementSystem	obtainAvailableAsset(assetType) - This method is used to return the asset list which are in available status for a given asset type.	String assetType	List<Asset>
7	AssetManagementSystem	obtainAsset(assetId,assetList) - This method is used to find the asset using asset id from the asset list. If any asset is in available status, then the method returns that asset object. Otherwise returns null.	Long assetId,List<Asset> assetList	Asset
8	AssetManagementSystem	assign(asset,user) - This method is used to assign the asset to that user, if it assign return true, otherwise returns false.	Asset,User	Boolean
9	AssetManagementSystem	obtainAssignedAssets(user) - This method is used to return the asset list, which is assigned by the particular user.	User	List<Asset>
10	AssetManagementSystem	returnAsset(asset) - This method is used to unassign the asset from a user. If it is returned then the method returns true, otherwise returns false.	Asset	Boolean


Create a class named as Main. Create the object for  AssetManagementSystem and access the methods .

[All text in bold corresponds to input and the rest corresponds to output]

Input and Output Format :

Refer to the sample input and output for formatting details.

Two xml input files are, asset.xml and user.xml
asset.xml

<assets>
          <asset>
                    <id>1</id>
                    <category>Electronics</category>
                    <type>Computer</type>
                    <price>25000</price>
          </asset>
</assets>

user.xml
<users>
          <user>
                    <id>1</id>
                    <name>Benjamin</name>
                    <department>Business</department>
          </user>
</user>

Sample Input & Output 1:
1. Assign
2. Return
3. Exit
Enter the choice:
1
Enter username:
Jack
Invalid username
Enter username:
Son
Invalid username
Enter username:
Jackson
Enter asset type:
RAM
RAM with id 6 is successfully assigned to Jackson
1. Assign
2. Return
3. Exit
Enter the choice:
1
Enter username:
Hudson
Enter asset type:
RAM
RAM is not available
1. Assign
2. Return
3. Exit
Enter the choice:
1
Enter username:
Hudson
Enter asset type:
Computer
Computer with id 1 is successfully assigned to Hudson
1. Assign
2. Return
3. Exit
Enter the choice:
1
Enter username:
Hudson
Enter asset type:
Projector
Projector with id 7 is successfully assigned to Hudson
1. Assign
2. Return
3. Exit
Enter the choice:
2
Enter username:
Hudson
1
7
Enter asset id:
1
Computer is returned by Hudson
1. Assign
2. Return
3. Exit
Enter the choice:
1
Enter username:
Hudson
Enter asset type:
fan
Invalid asset type
Enter asset  type :
Computer
Computer with id 1 is successfully assigned to Hudson
1. Assign
2. Return
3. Exit
Enter the choice:
2
Enter username:
Hudson
1
7
Enter asset id:
7
Projector is returned by Hudson
1. Assign
2. Return
3. Exit
Enter the choice:
2
Enter username:
Hudson
1
Enter asset id:
1
Computer is returned by Hudson
1. Assign
2. Return
3. Exit
Enter the choice:
3

Final 30 mins of the assessment : Reviewing the solution using the checklist provided and Finish the assessment
        § Please check if you have followed the right naming convention for the methods as mentioned in the case study.
        § Please refer the sample Input and Output for formatting specification like spacing, case (case-sensitive).
        § Please don't change the function name (which is given in description and code template).
        § Please follow the technical description(return type, input parameter, what that function does).
        § Please test the code properly and validate your program (click Validate) before submit.
        § Please use XmlSlurper to parse the xml string.
        § Please mention the filename(filepath) only in Main.groovy.

